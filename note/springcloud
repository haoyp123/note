一、 服务注册和发现
    常见的注册中心有zookeeper eureka  concul
    注册中心有两种：
        中心化和去中心化（相互同步，没有主从）
    eureka
    http://127.0.0.1:8761/eureka/apps 应用信息
    随机端口 server.port: 0 随机端口容易出问题。
    出现的问题：每个服务注册到注册中心都会序列化为一个application，规模越大，客户端容易full gc。

    registry-fetch-interval-seconds: 30
    定时刷新默认30秒读取注册中心数据，对内存也有一定压力。

    使用zookeeper作为注册中心
        对节点进行监听的方式进行更新。



二、 服务调用原理
    rpc：远程调用，就是一台计算机调用另一台计算机的子程序，无需额外编程.
    java rmi 二进制协议
      java序列化协议 传输对象, serializable 接口 list collection等接口为什么没有继承serializable,而实现类实现该接口,
    因为接口是无状态的,实现类是有状态的,最基本体现在 字段上,字段体现状态.

    webservice 文本协议
        xml约束:
            DTD 松散的
            XSD Schema 强制性的
    feign、spring cloud open feign
    使用场景都是客户端声明，请求不一样，请求映射不一样
    feign @RequestLine
    open feign @requestMapping 使用的spring mvc一套。

    spring cloud 利用feign的高扩展性，使用标准的spring web mvc注解来声明java接口

    spring cloud open feign 是通过java接口的方式来声明服务提供者的元信息，通过调用接口实现rest通讯。

    接口与服务提供者如何映射
    @FeignClient 注解指定名称可能用到了服务发现
    @enableFeignClients 如何感知使用@FeignClient配置类的
    feign如何序列化返回的
