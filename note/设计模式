设计模式最重要的作用是什么？
    设计模式的由来、如何使用设计模式

   设计原则：
    开闭 对修改关闭，对扩展开发
    里氏替换 子类实现父类的抽象方法，不能覆盖父类的非抽象方法。
    单一职责
    迪米特法则
    依赖倒置
    接口隔离

工厂设计模式
    简单工厂
        工厂对象决定创建哪个产品的实例。把创建产品的过程封装起来，对于客户端而言不可见。
        简单工厂，可能会有很多if else，逻辑可能比较复杂。创建逻辑前很多校验等，后续修改等不好解决。
        calender.getInstance();
        客户端只需要传入一个工厂类的参数，简单工厂把多个参数的职责放在一个类中，不易扩展多个，如果扩展产品的时候需要添加多个工厂。

    工厂方法模式。
        定义一个创建产品的接口，让实现这个接口的类决定创建哪个工厂。工厂方法让类的实例化推迟到子类实现。